#######################################
######### BUILDING SCRIPTS ############
#######################################
    create
      Purpose:
      Functions: map.checkFree | building.addItem | item.create
      Arguments:
          -subtype		BUILDING_TOKEN
          -location		[ x y z ]
          -item			(Optional) Item ID number or ITEM_TOKEN
          -material		(Optional) If ITEM_TOKEN is used specify the MATERIAL_TOKEN
      Examples:
          building/create -subtype CUSTOM_BUILDING -location \\TILE_LOCATION -item WEAPON:ITEM_WEAPON_SWORD_SHORT -material INORGANIC:IRON

    subtype-change
      Purpose:
      Functions: building.changeSubtype | building.addItem
      Arguments:
          -building		Building ID
          -unit			Unit ID
          -type			BUILDING_TOKEN
          -dur			#
          -item			Item ID
      Examples:
          building/subtype-change -building \\BUILDING_ID -type NEW_BUILDING_TOKEN -item [ \\INPUT_ITEMS ] -dur 1000


#######################################
########## ENTITY SCRIPTS #############
#######################################

    resource-change
      Purpose:
      Functions: entity.changeResource
      Arguments:
          -civ			Entity ID or ENTITY_TOKEN
          -type			TYPE:SUBTYPE
          -obj			OBJECT:SUBOBJECT
          -add
          -remove
      Examples:

#######################################
########### FLOW SCRIPTS ##############
#######################################

    random-plan
      Purpose:
      Functions: map.getPlanPositions | map.spawnFlow | map.spawnLiquid
      Arguments:
          -plan			Filename
          -unit			Unit ID
          -location		[ x y z ]
          -flow			FLOW_TYPE
          -inorganic		INORGANIC_TOKEN
          -density		#
          -static
          -liquid		water or magma
          -depth		#
          -offset		[ x y z ]
          -number		#
          -origin		[ x y z ]
      Examples:
          flow/random-plan -plan 5x5_X.txt -unit \\UNIT_ID -flow web -inorganic STEEL -density 50 -static -origin [ \\LOCATION ]
          flow/random-plan -plan spiral.txt -location [ \\LOCATION ] -liquid magma -depth 4 -number 10

    random-pos
      Purpose:
      Functions: map.getEdgesPositions | map.getPositionLocationRandom | map.spawnFlow | map.spawnLiquid
      Arguments:
          -unit                 Unit ID
          -location             [ x y z ]
          -flow                 FLOW_TYPE
          -inorganic            INORGANIC_TOKEN
          -density              #
          -static
          -liquid               water or magma
          -depth                #
          -offset               [ x y z ]
          -number               #
          -radius               [ x y z ]
          -circle
          -taper
      Examples:
          flow/random-pos -unit \\UNIT_ID -flow firebreath -density 25 -radius [ 10 10 0 ] -number 3
          flow/random-pos -unit \\UNIT_ID -flow web -inorganic STEEL -density 10 -number 1
          flow/random-pos -location [ \\LOCATION ] -liquid magma -depth 7 -radius [ 3 3 0 ] -offset [ 0 0 1 ] -circle -taper 

    random-surface
      Purpose:
      Functions: map.getPositionRandom | map.getPositionSurface | map.getEdgesPositions | map.spawnFlow | map.spawnLiquid | persist-delay.commandDelay
      Arguments:
          -frequency		#
          -dur			#
          -flow                 FLOW_TYPE
          -inorganic            INORGANIC_TOKEN
          -density              #
          -static
          -liquid               water or magma
          -depth                #
          -offset               [ x y z ]
          -number               #
          -radius               [ x y z ]
          -circle
          -taper
      Examples:
          flow/random-surface -flow DRAGONFIRE -density 25 -frequency 200 -number 50 -dur 7200
          flow/random-surface -flow WEB -inorganic GOLD -density 50 -frequency 500 -number 100 -dur 1000
          flow/random-surface -liquid magma -depth 1 -radius [ 1 1 0 ] -circle -number 50 -frequency 500 -dur 5000

    source
      Purpose:
      Functions: map.flowSource | map.flowSink | map.liquidSource | map.liquidSink
      Arguments:
          -unit			Unit ID
          -location		[ x y z ]
          -offset		[ x y z ]
          -source		#
          -sink			#
          -magma
          -flow			FLOW_TYPE
          -inorganic		INORGANIC_TOKEN
          -check		#
          -remove
          -removeAll
          -removeAllSource
          -removeAllSink
      Examples:

#######################################
########### ITEM SCRIPTS ##############
#######################################

    create
      Purpose:
      Functions: item.create
      Arguments:
          -creator		Unit ID
          -item			ITEM_TOKEN
          -material		MATERIAL_TOKEN
          -matchingGloves
          -matchingShoes
          -dur			#
      Examples:

    equip
      Purpose:
      Functions: unit.getBodyCategory | unit.getBodyToken | unit.getBodyFlag | item.equip
      Arguments:
          -item			Item ID (or MOST_RECENT)
          -bodyPart		BODYPART_TOKEN
          -type			Body Part Type (Valid Values: Category, Flag, or Token)
          -mode			Inventory Mode
      Examples:

    material-change
      Purpose:
      Functions: unit.getInventoryType | item.changeMaterial
      Arguments:
          -unit			Unit ID
          -item			Item ID
          -equipment		Equipment type (Valid Values: WEAPON, ARMOR, HELM, SHOES, GLOVES, PANTS, SHIELD, or AMMO)
          -mat			MATERIAL_TOKEN
          -dur			#
      Examples:
          item/material-change -unit \\UNIT_ID -weapon -ammo -mat INORGANIC:IMBUE_FIRE -dur 3600
          item/material-change -unit \\UNIT_ID -armor -helm -shoes -pants -gloves -mat INORGANIC:IMBUE_STONE -dur 1000
          item/material-change -unit \\UNIT_ID -shield -mat INORGANIC:IMBUE_AIR

    projectile
      Purpose:
      Functions: item.create | item.makeProjectileFall | item.makeProjectileShot
      Arguments:
          -unitSource		Unit ID
          -unitTarget		Unit ID
          -locationSource	[ x y z ]
          -locationTarget	[ x y z ]
          -creator		Unit ID
          -mat			MATERIAL_TOKEN
          -item			ITEM_TOKEN
          -number		#
          -maxrange		#
          -velocity		# or [ # # # ]
          -minrange		#
          -hitchance		#
          -height		#
          -equipped
      Examples:
          item/projectile -unit_source \\UNIT_ID -location_target [\\LOCATION] -item AMMO:ITEM_AMMO_ARROWS -mat STEEL -number 10 -maxrange 50 -minrange 10 -velocity 30 -hitchance 10

    quality-change
      Purpose:
      Functions: unit.getInventoryType | item.changeQuality
      Arguments:
          -unit			Unit ID
          -item			Item ID
          -type			ITEM_TOKEN
          -equipment		Equipment type (Valid Values: WEAPON, ARMOR, HELM, SHOES, GLOVES, PANTS, SHIELD, or AMMO)
          -quality		#
          -upgrade
          -downgrade
          -dur			#
      Examples:
          item/quality-change -unit \\UNIT_ID -weapon -quality 6 -dur 1000
          item/quality-change -type WEAPON:ITEM_WEAPON_GIANTS -downgrade


    subtype-change
      Purpose:
      Functions: unit.getInventoryType | item.changeSubtype
      Arguments:
          -unit                 Unit ID
          -item                 Item ID
          -type                 ITEM_TOKEN
          -equipment            Equipment type (Valid Values: WEAPON, ARMOR, HELM, SHOES, GLOVES, PANTS, SHIELD, or AMMO)
          -subtype              ITEM_TOKEN
          -upgrade
          -downgrade
          -dur                  #
      Examples:
          item/subtype-change -unit \\UNIT_ID -equipment WEAPON -upgrade -dur 1000
          item/subtype-change -type WEAPON:ITEM_WEAPON_GIANTS -subtype ITEM_WEAPON_GIANTS_WEAK -dur 1000

    unequip
      Purpose:
      Functions: unit.getInventoryType | unit.getInventoryMode | unit.getBodyCategory | unit.getBodyToken | unit.getBodyFlag | item.unequip
      Arguments:
          -unit			Unit ID
          -item			Item ID or ALL
          -itemType		ITEM_TYPE or ALL
          -bodyPart		BODYPART_TOKEN
          -partType		Body Part Type (Valid Values: Category, Flag, or Token)
          -mode			Inventory Mode
      Examples:

#######################################
########### TILE SCRIPTS ##############
#######################################

    material-change
      Purpose:
      Functions: map.getPlanPositions | map.changeInorganic
      Arguments:
          -plan			Filename
          -unit			Unit ID
          -location		[ x y z ]
          -offset		[ x y z ]
          -material		INORGANIC_TOKEN
          -floor
          -dur			#
      Examples:
          tile/material-change -location [ \\LOCATION ] -material RUBY
          tile/material-change -plan 5x5_X -unit \\UNIT_ID -material SLADE -floor -dur 3000

    temperature-change
      Purpose:
      Functions: map.getPlanPositions | map.changeTemperature
      Arguments:
          -plan                 Filename
          -unit                 Unit ID
          -location             [ x y z ]
          -offset               [ x y z ]
          -temperature          #
          -dur                  #
      Examples:
          tile/temperature-change -unit \\UNIT_ID -plan 5x5_X -temperature 15000 -dur 1000
          tile/temperature-change -location [ \\LOCATION ] -temperature 8000

#######################################
########## TRIGGER SCRIPTS ############
#######################################

    action
      Purpose:
      Functions: None
      Arguments:
          -actionType		Action Type (Valid Values: Attack, Shoot, Block, Dodge, Equip, Move, Parry, Unequip, Wound)
          -item			ITEM_TOKEN
          -material		MATERIAL_TOKEN
          -contaminant		MATERIAL_TOKEN
          -creature		CREATURE_TOKEN
          -attack		ATTACK_TOKEN
          -command		Script
      Examples:

    building
      Purpose:
      Functions: None
      Arguments:
          -building		BUILDING_TOKEN
          -location		OUTSIDE or INSIDE
          -zLevels		#
          -requiredBuilding	BUILDING_TOKEN:#
          -forbiddenBuilding	BUILDING_TOKEN:#
          -maxNumber		#
          -requiredWater	#
          -requiredMagma	#
          -command		Script
      Examples:

    projectile
      Purpose:
      Functions: None
      Arguments:
          -type			Move, Hit or Fired
          -item			ITEM_TOKEN
          -material		MATERIAL_TOKEN
          -contaminant		MATERIAL_TOKEN
          -remove
          -command		Script
      Examples:

    reaction
      Purpose:
      Functions: None
      Arguments:
          -trigger		onStart, onFinish, or onProduct
          -reaction		REACTION_TOKEN
          -delay		#
          -requiredWater	#
          -requiredMagma	#
          -command		Script
      Examples:

#######################################
########### UNIT SCRIPTS ##############
#######################################

    action-change
      Purpose:
      Functions: unit.changeAction | unit.changeInteraction
      Arguments:
          -unit			Unit ID
          -action		Action Type (Valid Values: All, Move, or Attack)
          -interaction		Interaction Type (Valid Values: All, Innate, Learned, or INTERACTION_TOKEN)
          -timer		#
      Examples:
          unit/action-change -unit \\UNIT_ID -action All -timer 200

    attack
      Purpose:
      Functions: unit.getBodyRandom | unit.getBodyCategory | unit.getInventoryType | unit.getAttack | item.getAttack
                 attack.getAttackItemVelocity | attack.getAttackUnitVelocity | attack.addAttack
      Arguments:
          -defender		Unit ID
          -attacker		Unit ID
          -target		BODYPART_CATEGORY
          -attack		ATTACK_TOKEN
          -velocity		#
          -hitchance		#
          -weapon		Equipped
          -delay		#
          -number		#
          -flags		Attack Flags
      Examples:

    attribute-change
      Purpose:
      Functions: unit.getUnit | misc.getChange | unit.changeAttribute
      Arguments:
          -attribute		ATTRIBUTE TOKEN
          -mode			Fixed, Percent, or Set
          -amount		#
          -dur			#
          -unit			Unit ID
      Examples:
          unit/attribute-change -unit \\UNIT_ID -mode Fixed -amount 100 -attribute STRENGTH
          unit/attribute-change -unit \\UNIT_ID -mode Percent -amount [ 10 10 10 ] -attribute [ ENDURANCE TOUGHNESS WILLPOWER ] -dur 3600
          unit/attribute-change -unit \\UNIT_ID -mode set -amount 5000 -attribute WILLPOWER -dur 1000

    body-change
      Purpose:
      Functions: unit.getBodyCategory | unit.getBodyToken | unit.getBodyFlag | unit.changeBody | misc.getChange
      Arguments:
          -unit			Unit ID
          -category		BODYPART_CATEGORY
          -token		BODYPART_TOKEN
          -flag			BODYPART_FLAG
          -temperature		# or Fire
          -size			All, Size, Length, or Area
          -mode			Fixed, Percent, or Set
          -amount		#
          -dur			#
      Examples:
          unit/body-change -unit \\UNIT_ID -flag GRASP -temperature fire -dur 1000
          unit/body-change -unit \\UNIT_ID -category LEG_LOWER -temperature 8000

    butcher
      Purpose:
      Functions: None
      Arguments:
          -unit			Unit ID
          -corpse		Corpse Item ID
          -location		[ x y z ]
          -kill
      Examples:

    convert
      Purpose:
      Functions: unit.changeSide
      Arguments:
          -unit			Unit ID
          -side			Unit ID
          -type			Civilian, Ally, Friend, Neutral, Enemy, Invader, or Pet
          -dur			#
      Examples:
          unit/convert -unit \\UNIT_ID -side \\UNIT_ID -type Pet -dur 1000

    counter-change
      Purpose:
      Functions: misc.getChange | unit.changeCounter
      Arguments:
          -unit			Unit ID
          -counter		webbed, stunned, winded, unconcious, suffocation, pain, nausea, dizziness, paralysis, numbness, fever, exhaustion, hunger, thirst, sleepiness, blood, or infection
          -mode			Fixed, Percent, or Set
          -amount		#
          -dur			#
      Examples:
          unit/counter-change -unit \\UNIT_ID -mode fixed -amount 10000 -counter stunned -dur 10
          unit/counter-change -unit \\UNIT_ID -mode set -amount [ 0 0 0 0 ] -counter [ nausea dizziness numbness fever ]
          unit/counter-change -unit \\UNIT_ID -mode percent -amount \-100 -counter blood

    create
      Purpose:
      Functions: misc.permute | unit.create
      Arguments:
          -loc			[ x y z ]
          -creature		CREATURE_TOKEN
          -reference		Unit ID
          -side			Civilian, Ally, Friendly, Neutral, Enemy, Pet, or Domestic
          -name			Random, ENTITY_TOKEN, or First Name
          -syndrome		SYN_NAME
          -dur			#
      Examples:

    destroy
      Purpose:
      Functions: unit.removal
      Arguments:
          -unit			Unit ID
          -type			Created, Resurrected, or Animated
      Examples:

    emotion-change
      Purpose:
      Functions: unit.changeEmotion
      Arguments:
          -unit			Unit ID
          -thought		Thought Type (Valid Values: ???)
          -subthought		Subthought Type (Valid Values: ???)
          -emotion		EMOTION_TOKEN
          -number		#
          -severity		#
          -strength		#
          -remove		Recent, Random, or All
          -add
          -dur			#
      Examples:

    flag-change
      Purpose:
      Functions: None
      Arguments:
          -unit			Unit ID
          -flag			Flag
          -dur			#
          -reverse
          -True
          -False
      Examples:

    move
      Purpose:
      Functions: misc.permute | map.getPositionUnitRandom | building.findBuilding | unit.move
      Arguments:
          -location		[ x y z ]
          -random		[ x y z ] or #
          -building		Building ID, BUILDING_TOKEN, or Building Type (Valid Values: Random, Owned, TradeDepot, or Trap)
          -area			Area Type (Valid Values: Idle, Destination, Opponent, Farm, MeetingArea, WaterSource, Hospital, Barracks, or Stockpile)
          -construction		Construction ID or Construction Type (Valid Values: Walltop)
          -dur			#
      Examples:

    propel
      Purpose:
      Functions: unit.makeProjectile
      Arguments:
          -unitSource		Unit ID
          -unitTarget		Unit ID
          -velocity		[ x y z ]
          -mode			Fixed, Random, or Relative
      Examples:

    resistance-change
      Purpose:
      Functions: unit.getUnit | misc.getChange | unit.changeResistance
      Arguments:
          -resistance           RESISTANCE_TOKEN
          -mode                 Fixed, Percent, or Set
          -amount               #
          -dur                  #
          -unit                 Unit ID
      Examples:

    skill-change
      Purpose:
      Functions: unit.getUnit | misc.getChange | unit.changeSkill
      Arguments:
          -skill                SKILL_TOKEN
          -mode                 Fixed, Percent, or Set
          -amount               #
          -dur                  #
          -unit                 Unit ID
      Examples:

    stat-change
      Purpose:
      Functions: unit.getUnit | misc.getChange | unit.changeStat
      Arguments:
          -stat                 STAT_TOKEN
          -mode                 Fixed, Percent, or Set
          -amount               #
          -dur                  #
          -unit                 Unit ID
      Examples:

    syndrome-change
      Purpose:
      Functions: unit.changeSyndrome
      Arguments:
          -unit			Unit ID
          -syndrome		SYN_NAME
          -class		SYN_CLASS
          -add
          -erase
          -terminate
          -alterDuration	#
          -dur			#
      Examples:

    trait-change
      Purpose:
      Functions: unit.getUnit | misc.getChange | unit.changeTrait
      Arguments:
          -trait                TRAIT_TOKEN
          -mode                 Fixed, Percent, or Set
          -amount               #
          -dur                  #
          -unit                 Unit ID
      Examples:

    transform
      Purpose:
      Functions: unit.checkCreatureRace | unit.transform
      Arguments:
          -unit			Unit ID
          -creature		CREATURE_TOKEN
          -dur			#
      Examples:

    wound-change
      Purpose:
      Functions: unit.changeWound | misc.permute | unit.getConnectedParts | unit.getBodyCorpseParts | unit.changeLife
      Arguments:
          -unit			Unit ID
          -corpse		Item ID
          -remove		# or All
          -recent
          -animate		Unit ID or nothing
          -resurrect		Unit ID or nothing
          -regrow
          -fitForResurrect
          -fitForAnimate
          -syndrome		SYN_NAME
          -dur			#
      Examples:
          unit/wound-change -unit \\UNIT_ID -remove All regrow (completely heals a unit)
          unit/wound-change -unit \\UNIT_ID -remove 2 -recent (heal the last two wounds the unit suffered, doesn't regrow lost limbs)
          unit/wound-change -unit \\UNIT_ID -resurrect -fitForResurrect -regrow (fully restores a unit to life, including all of their lost body parts)
          unit/wound-change -unit \\UNIT_ID -animate -dur 1000 (animates all body parts and main body of unit for 1000 ticks)
          unit/wound-change -unit \\UNIT_ID -resurrect -fitForAnimate -regrow (if unit was chopped into 4 pieces, would create one original and 3 copies, all complete units)
